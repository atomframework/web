crystal_doc_search_index_callback({"repository_name":"github.com/onyxframework/rest","body":"<a href=\"https://onyxframework.org\"><img width=\"100\" height=\"100\" src=\"https://onyxframework.org/img/logo.svg\"></a>\n\n# Onyx::REST\n\n[![Built with Crystal](https://img.shields.io/badge/built%20with-crystal-000000.svg?style=flat-square)](https://crystal-lang.org/)\n[![Travis CI build](https://img.shields.io/travis/onyxframework/rest/master.svg?style=flat-square)](https://travis-ci.org/onyxframework/rest)\n[![API docs](https://img.shields.io/badge/api_docs-online-brightgreen.svg?style=flat-square)](https://api.onyxframework.org/rest)\n[![Latest release](https://img.shields.io/github/release/onyxframework/rest.svg?style=flat-square)](https://github.com/onyxframework/rest/releases)\n\nA REST API framework for [Crystal](https://crystal-lang.org).\n\n## Supporters ‚ù§Ô∏è\n\nThanks to all my patrons, I can continue working on beautiful Open Source Software! üôè\n\n[Alexander Maslov](https://seendex.ru), [Lauri Jutila](https://github.com/ljuti)\n\n*You can become a patron too in exchange of prioritized support and other perks*\n\n<a href=\"https://www.patreon.com/vladfaust\"><img height=\"50\" src=\"https://onyxframework.org/img/patreon-button.svg\"></a>\n\n## About üëã\n\nOnyx::REST is an opinionated REST API framework build on top of [Onyx::HTTP](https://github.com/onyxframework/http). It provides modules to build scalabale applications, such as [`Action`](https://api.onyxframework.org/rest/Onyx/REST/Action.html) and [`View`](https://api.onyxframework.org/rest/Onyx/REST/View.html).\n\n## Installation üì•\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  onyx-rest:\n    github: onyxframework/rest\n    version: ~> 0.6.2\n```\n\nThis shard follows [Semantic Versioning v2.0.0](http://semver.org/), so check [releases](https://github.com/onyxframework/rest/releases) and change the `version` accordingly. Please visit [github.com/crystal-lang/shards](https://github.com/crystal-lang/shards) to know more about Crystal shards.\n\n## Usage üíª\n\n> ‚ö† **Note:** you should make yourself familiar with [Onyx::HTTP](https://github.com/onyxframework/http) before using this shard.\n\nOnyx::REST has two main concepts: actions and views. Action is where the business logic takes place, they are essentially REST endpoints. And views take care of rendering.\n\n### Actions\n\n[`Action`](https://api.onyxframework.org/rest/Onyx/REST/Action.html) is a module and can be included into any object. Structs works nice, because actions do not need to reference each other, they are throw-away objects. There is no enforced one-to-one relation between actions and endpoints. Multiple endpoints can execute a single Action, and vice-versa. Let's define a simple action:\n\n```crystal\nrequire \"onyx-rest\"\n\nstruct Hello\n  include Onyx::REST::Action\n\n  def call\n    context.response << \"Hello Onyx\"\n  end\nend\n\nrouter = Onyx::HTTP::Router.new do\n  get \"/\", Hello\nend\n\nserver = Onyx::HTTP::Server.new(router)\nserver.bind_tcp(5000)\nserver.listen\n```\n\n```sh\n> curl http://localhost:5000\nHello Onyx\n```\n\nActions have access to the current [`HTTP::Server::Context`](https://crystal-lang.org/api/0.27.2/HTTP/Server/Context.html) via `#context` getter. They also have have `#status`, `#header` and `#redirect` shortcuts.\n\n#### Params\n\nYou can easily define strongly-typed parameters in Actions to enable it parsing incoming values from the HTTP request path, query and also form and JSON bodies. Nested and array params are supported as well.\n\n```crystal\nrequire \"onyx-rest\"\n\nstruct Hello\n  include Onyx::REST::Action\n\n  params do\n    query do\n      type who : String\n    end\n  end\n\n  def call\n    context.response << \"Hello #{params.query.who}\"\n  end\nend\n\nrouter = Onyx::HTTP::Router.new do\n  get \"/\", Hello\nend\n\nserver = Onyx::HTTP::Server.new(router)\nserver.bind_tcp(5000)\nserver.listen\n```\n\n```sh\n> curl http://localhost:5000/?who=World\nHello World\n```\n\nThis feature is proudly powered by [HTTP::Params::Serializable](https://github.com/vladfaust/http-params-serializable) shard. Read more about `.params` macro in [API docs](https://api.onyxframework.org/rest/Onyx/REST/Action.html).\n\n#### Errors\n\nIt's typical for web applications to have *expected errors*, e.g. \"User is not found\". Actions have syntax to define such errors (you'll need an [`Onyx::REST::Rescuer`](https://api.onyxframework.org/rest/Onyx/REST/Rescuer.html)):\n\n```crystal\nrequire \"onyx-rest\"\n\nstruct GetUser\n  include Onyx::REST::Action\n\n  params do\n    path do\n      type id : Int32\n    end\n  end\n\n  errors do\n    type UserNotFound(404)\n  end\n\n  def call\n    if params.path.id == 42\n      context.response << \"Found user\"\n    else\n      raise UserNotFound.new\n    end\n  end\nend\n\nrescuer = Onyx::REST::Rescuer.new\n\nrouter = Onyx::HTTP::Router.new do\n  get \"/users/:id\", GetUser\nend\n\nserver = Onyx::HTTP::Server.new(rescuer, router)\nserver.bind_tcp(5000)\nserver.listen\n```\n\n```sh\n> curl http://localhost:5000/users/42\nFound user\n> curl http://localhost:5000/users/43\n404 User Not Found\n```\n\n### Views\n\n[`View`](https://api.onyxframework.org/rest/Onyx/REST/View.html) is a module which responsibility is to render responses. A view should be handled by a *renderer*, which could either be [`Onyx::Renderers::Text`](https://api.onyxframework.org/rest/Onyx/REST/Renderers/Text.html) or [`Onyx::Renderers::JSON`](https://api.onyxframework.org/rest/Onyx/REST/Renderers/JSON.html):\n\n```crystal\nrequire \"onyx-rest\"\nrequire \"onyx-rest/renderers/text\"\n\nstruct UserView\n  include Onyx::REST::View\n\n  def initialize(@id : Int32, @name : String)\n  end\n\n  text(\"id: #{@id}, name: #{@name}\")\nend\n\nrouter = Onyx::HTTP::Router.new do\n  get \"/\" do |env|\n    env.response.view = UserView.new(42, \"John\")\n  end\nend\n\nrenderer = Onyx::REST::Renderers::Text.new\n\nserver = Onyx::HTTP::Server.new(router, renderer)\nserver.bind_tcp(5000)\nserver.listen\n```\n\n```sh\n> curl http://localhost:5000\nid: 42, name: John\n```\n\n### Actions + Views\n\nActions have two native integrations with views. The first one is `#view` method which sets the response view like this:\n\n```crystal\n  def call\n    view(UserView.new(42, \"John\"))\n  end\n```\n\nAnd the second one is the fact that if an action returns a `View`, it is then treated as a response view (if not set eariler):\n\n```crystal\n  def call\n    return UserView.new(42, \"John\")\n  end\n```\n\nor, for a prettier control flow:\n\n```crystal\n  def call\n    return UserView.new(42, \"John\") if something\n    some_code\n    return AnotherView.new\n  end\n```\n\n### Macros\n\nYou should use `\"onyx/rest\"` instead of `\"onyx/http\"` to enable [`Onyx::REST::Rescuer`](https://api.onyxframework.org/rest/Onyx/REST/Rescuer.html) and an ability to enable a renderer in one line:\n\n```crystal\nrequire \"onyx/rest\"\n\nOnyx.render(:json)\nOnyx.listen\n```\n\nRead more about Onyx::HTTP macros at [**@onyxframework/onyx#http**](https://github.com/onyxframework/onyx#http) or at [**@onyxframework/http#macros**](https://github.com/onyxframework/http#macros).\n\n## Community üç™\n\nThere are multiple places to talk about this particular shard and about other ones as well:\n\n* [Onyx::REST Gitter chat](https://gitter.im/onyxframework/rest)\n* [Onyx Framework Gitter community](https://gitter.im/onyxframework)\n* [Vlad Faust Gitter community](https://gitter.im/vladfaust)\n* [Onyx Framework Twitter](https://twitter.com/onyxframework)\n* [Onyx Framework Telegram channel](https://telegram.me/onyxframework)\n\n## Support ‚ù§Ô∏è\n\nThis shard is maintained by me, [Vlad Faust](https://vladfaust.com), a passionate developer with years of programming and product experience. I love creating Open-Source and I want to be able to work full-time on Open-Source projects.\n\nI will do my best to answer your questions in the free communication channels above, but if you want prioritized support, then please consider becoming my patron. Your issues will be labeled with your patronage status, and if you have a sponsor tier, then you and your team be able to communicate with me in private or semi-private channels such as e-mail and [Twist](https://twist.com). There are other perks to consider, so please, don't hesistate to check my Patreon page:\n\n<a href=\"https://www.patreon.com/vladfaust\"><img height=\"50\" src=\"https://onyxframework.org/img/patreon-button.svg\"></a>\n\nYou could also help me a lot if you leave a star to this GitHub repository and spread the world about Crystal and Onyx! üì£\n\n## Contributing\n\n1. Fork it ( https://github.com/onyxframework/http/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'feat: some feature') using [Angular style commits](https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit)\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Vlad Faust](https://github.com/vladfaust) - creator and maintainer\n\n## Licensing\n\nThis software is licensed under [MIT License](LICENSE).\n\n[![Open Source Initiative](https://upload.wikimedia.org/wikipedia/commons/thumb/4/42/Opensource.svg/100px-Opensource.svg.png)](https://opensource.org/licenses/MIT)\n","program":{"html_id":"github.com/onyxframework/rest/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/onyxframework/rest","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/onyxframework/rest/HTTP","path":"HTTP.html","kind":"module","full_name":"HTTP","name":"HTTP","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/http-params-serializable/src/http-params-serializable/annotations.cr","line_number":1,"url":"https://github.com/onyxframework/rest/blob/13910a4b87698269ea143ffb45a3b07942448b3a/lib/http-params-serializable/src/http-params-serializable/annotations.cr"},{"filename":"onyx-rest/ext/http/server/response/view.cr","line_number":5,"url":"https://github.com/onyxframework/rest/blob/13910a4b87698269ea143ffb45a3b07942448b3a/src/onyx-rest/ext/http/server/response/view.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Extensions to the standard `HTTP` module.","summary":"<p>Extensions to the standard <code><a href=\"HTTP.html\">HTTP</a></code> module.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/onyxframework/rest/HTTP/Server","path":"HTTP/Server.html","kind":"class","full_name":"HTTP::Server","name":"Server","abstract":false,"superclass":{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/rest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-rest/ext/http/server/response/view.cr","line_number":7,"url":"https://github.com/onyxframework/rest/blob/13910a4b87698269ea143ffb45a3b07942448b3a/src/onyx-rest/ext/http/server/response/view.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/rest/HTTP","kind":"module","full_name":"HTTP","name":"HTTP"},"doc":"Extensions to the standard `HTTP::Server` class.","summary":"<p>Extensions to the standard <code><a href=\"../HTTP/Server.html\">HTTP::Server</a></code> class.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/onyxframework/rest/HTTP/Server/Response","path":"HTTP/Server/Response.html","kind":"class","full_name":"HTTP::Server::Response","name":"Response","abstract":false,"superclass":{"html_id":"github.com/onyxframework/rest/IO","kind":"class","full_name":"IO","name":"IO"},"ancestors":[{"html_id":"github.com/onyxframework/rest/IO","kind":"class","full_name":"IO","name":"IO"},{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/rest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/onyx-http/src/onyx-http/ext/http/server/response/error.cr","line_number":3,"url":"https://github.com/onyxframework/rest/blob/13910a4b87698269ea143ffb45a3b07942448b3a/lib/onyx-http/src/onyx-http/ext/http/server/response/error.cr"},{"filename":"onyx-rest/ext/http/server/response/view.cr","line_number":9,"url":"https://github.com/onyxframework/rest/blob/13910a4b87698269ea143ffb45a3b07942448b3a/src/onyx-rest/ext/http/server/response/view.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/rest/HTTP/Server","kind":"class","full_name":"HTTP::Server","name":"Server"},"doc":"Extensions to the standard `HTTP::Server::Response` class.","summary":"<p>Extensions to the standard <code><a href=\"../../HTTP/Server/Response.html\">HTTP::Server::Response</a></code> class.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"view:Onyx::REST::View?-instance-method","html_id":"view:Onyx::REST::View?-instance-method","name":"view","doc":"A view to render.","summary":"<p>A view to render.</p>","abstract":false,"args":[],"args_string":" : Onyx::REST::View?","source_link":"https://github.com/onyxframework/rest/blob/13910a4b87698269ea143ffb45a3b07942448b3a/src/onyx-rest/ext/http/server/response/view.cr#L13","def":{"name":"view","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Onyx::REST::View | ::Nil","visibility":"Public","body":"@view"}},{"id":"view=(view:Onyx::REST::View?)-instance-method","html_id":"view=(view:Onyx::REST::View?)-instance-method","name":"view=","doc":"A view to render.","summary":"<p>A view to render.</p>","abstract":false,"args":[{"name":"view","doc":null,"default_value":"","external_name":"view","restriction":"Onyx::REST::View | ::Nil"}],"args_string":"(view : Onyx::REST::View?)","source_link":"https://github.com/onyxframework/rest/blob/13910a4b87698269ea143ffb45a3b07942448b3a/src/onyx-rest/ext/http/server/response/view.cr#L17","def":{"name":"view=","args":[{"name":"view","doc":null,"default_value":"","external_name":"view","restriction":"Onyx::REST::View | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@view = view"}}],"macros":[],"types":[]}]}]}]}})