{"repository_name":"github.com/onyxframework/rest","body":"<a href=\"https://onyxframework.org\"><img align=\"right\" width=\"147\" height=\"147\" src=\"https://onyxframework.org/img/logo.svg\"></a>\n\n# Onyx::REST\n\n[![Built with Crystal](https://img.shields.io/badge/built%20with-crystal-000000.svg?style=flat-square)](https://crystal-lang.org/)\n[![Travis CI build](https://img.shields.io/travis/onyxframework/rest/master.svg?style=flat-square)](https://travis-ci.org/onyxframework/rest)\n[![API docs](https://img.shields.io/badge/api_docs-online-brightgreen.svg?style=flat-square)](https://api.onyxframework.org/rest)\n[![Latest release](https://img.shields.io/github/release/onyxframework/rest.svg?style=flat-square)](https://github.com/onyxframework/rest/releases)\n\nA REST API framework for [Crystal](https://crystal-lang.org).\n\n## About\n\nOnyx::REST is an opinionated REST API framework — basically, a collection of HTTP handlers and the default [HTTP::Server](https://crystal-lang.org/api/HTTP/Server.html) wrapper. It's thoroughly designed to be as much beginner-friendly as possible, yet scale with the developer's knowledge of the [Crystal Language](https://crystal-lang.org). The framework itself is [SOLID](https://en.wikipedia.org/wiki/SOLID) (excluding some simplifications to reduce boilerplate code), modular (there can be multiple servers in one application and there are no top-level macros by default) and respects configuration over convention.\n\n### Benchmarks\n\n[![Benchmarks](https://d3ugvbs94d921r.cloudfront.net/5c273d8b3ba0f6ef7c65d832.svg?t=b938d2bf4965222&v=3318a7b2)](https://public.chartblocks.com/c/5c273d8b3ba0f6ef7c65d832?t=b938d2bf4965222)\n\n*Source: [https://github.com/the-benchmarker/web-frameworks@2dc801850d6cfed91333cf9af87f7b2c363d9e38](https://github.com/the-benchmarker/web-frameworks/blob/2dc801850d6cfed91333cf9af87f7b2c363d9e38/README.md)*\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  onyx-rest:\n    github: onyxframework/rest\n    version: ~> 0.5.0\n```\n\nThis shard follows [Semantic Versioning v2.0.0](http://semver.org/), so check [releases](https://github.com/onyxframework/rest/releases) and change the `version` accordingly. Please visit [github.com/crystal-lang/shards](https://github.com/crystal-lang/shards) to know more about Crystal shards.\n\n## Usage\n\nThis is the most basic example of an application written with Onyx::REST:\n\n```crystal\nrequire \"onyx-rest\"\n\nrouter = Onyx::REST::Router.new do\n  get \"/\" do\n    \"Hello Onyx!\"\n  end\nend\n\nserver = Onyx::REST::Server.new(router)\nserver.bind_tcp(5000)\nserver.listen\n```\n\n```console\nINFO [14:04:31.493] ⬛ Onyx::REST::Server is listening at http://127.0.0.1:5000\nINFO [14:04:34.082] ⬛ Onyx::REST::Server is shutting down!\n```\n\n```console\n$ curl http://localhost:5000\nHello Onyx!\n```\n\n### Handlers\n\nFundamentally, every Onyx::REST application is a stack of HTTP handlers passed to the [Onyx::REST::Server](https://api.onyxframework.org/rest/Onyx/REST/Server.html). To add new functionality, you add new handlers to the stack. There is a number of implemented handlers which fit the most common REST application needs:\n\n* [Onyx::REST::Router](https://api.onyxframework.org/rest/Onyx/REST/Router.html) — routes the request to a proc\n* [Onyx::REST::CORS](https://api.onyxframework.org/rest/Onyx/REST/CORS.html) — Cross Origin Resource Sharing handler\n* [Onyx::REST::RequestID](https://api.onyxframework.org/rest/Onyx/REST/RequestID.html) — adds ID to the request\n* Rescuers — rescue unhandled errors\n  * [Onyx::REST::Rescuers::Standard](https://api.onyxframework.org/rest/Onyx/REST/Rescuers/Standard.html) — rescues errors and logs them colorfully to a standard Crystal logger\n* Loggers — log requests\n  * [Onyx::REST::Loggers::Standard](https://api.onyxframework.org/rest/Onyx/REST/Loggers/Standard.html) — logs requests colorfully to a standard Crystal logger\n* Renderers — render responses\n  * [Onyx::REST::Renderers::JSON](https://api.onyxframework.org/rest/Onyx/REST/Renderers/JSON.html) — renders to JSON\n\n#### Request ID\n\nThe built-in [Onyx::REST::RequestID](https://api.onyxframework.org/rest/Onyx/REST/RequestID.html) adds a random UUID to the [Request instance](https://api.onyxframework.org/rest/HTTP/Request.html):\n\n```crystal\nrequest_id = Onyx::REST::RequestID.new\nhandlers = [request_id, router]\nserver = Onyx::REST::Server.new(handlers)\n# ditto\n```\n\n```console\n$ curl http://127.0.0.1:5000\nX-Request-ID: 23bac83d-4894-4e6c-b007-7785ff73d684\n```\n\n#### Logging requests\n\nBuilt-in requests logger is pretty easy to use:\n\n```crystal\nlogger = Onyx::REST::Loggers::Standard.new\nhandlers = [request_id, logger, rescuer]\n# ditto\n```\n\n```console\nINFO [14:04:32.578] [4821be8e]      GET / 200 127μs\nINFO [14:04:36.718] [6ec8d538]     POST /users 201 1.579ms\nINFO [14:04:39.912] [60c5d1ed]      GET /unknown 404 77μs\n```\n\n#### Rescuing unhandled errors\n\nIf an unhandled error raised somewhere during processing the request, the Crystal process doesn't crash and the user sees `500 Internal Server Error`, but the error's backtrace is put directly into `STDERR` and the handlers stack is exited. Therefore, it's a good idea to add a rescuer handler into the stack. For example, default [Onyx::REST::Rescuers::Standard](https://api.onyxframework.org/rest/Onyx/REST/Rescuers/Standard.html) logs the error into a standard Crystal logger:\n\n```crystal\nrouter.get \"/error\" do |env|\n  raise \"Oops\"\nend\n\nrescuer = Onyx::REST::Rescuers::Standard.new\nhandlers = [request_id, logger, rescuer, router]\n```\n\n```console\nINFO [14:04:32.578] [8e0c113f]  ERROR  Oops\n\nOops (Exception)\n  from spec/json_server.cr:23:9 in '->'\n  from src/onyx-rest/router.cr:255:3 in '->'\n  from src/onyx-rest/router.cr:255:3 in 'call'\n  from /usr/share/crystal/src/http/server/handler.cr:24:7 in 'call_next'\n  from src/onyx-rest/rescuer.cr:20:5 in 'call'\n  from /usr/share/crystal/src/http/server/handler.cr:24:7 in 'call_next'\n  from src/onyx-rest/rescuer.cr:20:5 in 'call'\n  from /usr/share/crystal/src/http/server/handler.cr:24:7 in 'call_next'\n  from src/onyx-rest/loggers/standard.cr:73:11 in 'call'\n\nINFO [14:04:32.578] [8e0c113f]     GET /error 500 1.890ms\n```\n\nYou can also specify the \"next\" handler for a rescuer, so it calls it directly upon rescuing:\n\n```crystal\nrenderer = Onyx::REST::Renderers::JSON.new\nrescuer = Onyx::REST::Rescuers::Standard.new(renderer)\n# ditto\n```\n\nAnd the result would be:\n\n```json\n{\n  \"error\": {\n    \"class\": \"UnhandledServerError\",\n    \"message\": \"Unhandled server error. If you are the application owner, see the logs for details\",\n    \"code\": 500\n  }\n}\n```\n\n### REST errors\n\nThere is a [`Onyx::REST::Error`](https://api.onyxframework.org/rest/Onyx/REST/Error.html) abstract class which defines an **expected** error, for example:\n\n```crystal\nclass UserNotFound < Onyx::REST::Error(404)\n  def initialize(id)\n    super(\"User not found with id #{id}\")\n  end\nend\n\nrouter.get \"/users/:id\" do |env|\n  id = env.request.path_params[\"id\"].to_i?\n  raise UserNotFound.new(id) unless Models::User.find(id)\nend\n```\n\nThese errors are typically rescued by the router and renderers (no need for a [Rescuer](https://api.onyxframework.org/rest/Onyx/REST/Rescuer.html) in this case):\n\n```console\n$ curl http://localhost:5000/users/42\n404 User not found with id 42\n```\n\n### Params\n\nOnyx::REST has a built-in rescuer for [`HTTP::Params::Serializable`](https://github.com/vladfaust/http-params-serializable), which makes defining typed params a piece of cake:\n\n```crystal\nrequire \"onyx-rest\"\nrequire \"onyx-rest/ext/http-params-serializable\"\n\nstruct FindUserParams\n  include HTTP::Params::Serializable\n\n  getter name : String\n  getter age : Int32\nend\n\nrouter.get \"/users\" do |env|\n  params = FindUserParams.new(env.request.query)\n  users = Models::Users.find(name: params.name, age: params.age)\n\n  if user = users[0]?\n    \"#{user.first_name} #{user.last_name}\"\n  end\nend\n\n# Standard rescuers rescues `Exception`s\nrescuer = Onyx::REST::Rescuers::Standard.new\n\n# Params rescuer rescues only Params errors and skips other `Exception`s\nparams_rescuer = HTTP::Params::Serializable::Rescuer.new\n\nserver = Onyx::REST::Server.new([rescuer, params_rescuer, router])\n```\n\n```console\n$ curl http://localhost:5000/users?age=foo\n400 Parameter \"age\" can't be cast from \"foo\" to Int32\n$ curl http://localhost:5000/users?age=22\nVlad Faust\n```\n\n## Contributing\n\n1. Fork it ( https://github.com/onyxframework/rest/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Vlad Faust](https://github.com/vladfaust) - creator and maintainer\n\n## Licensing\n\nThis software is licensed under [BSD 3-Clause License](LICENSE).\n\n[![Open Source Initiative](https://upload.wikimedia.org/wikipedia/commons/thumb/4/42/Opensource.svg/100px-Opensource.svg.png)](https://opensource.org/licenses/BSD-3-Clause)\n","program":{"html_id":"github.com/onyxframework/rest/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/onyxframework/rest","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/onyxframework/rest/HTTP","path":"HTTP.html","kind":"module","full_name":"HTTP","name":"HTTP","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"onyx-rest/ext/http/server/response.cr","line_number":1,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/server/response.cr"},{"filename":"onyx-rest/ext/http/server/response/error.cr","line_number":1,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/server/response/error.cr"},{"filename":"onyx-rest/ext/http/server/response/text.cr","line_number":1,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/server/response/text.cr"},{"filename":"onyx-rest/ext/http/request/id.cr","line_number":1,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/request/id.cr"},{"filename":"onyx-rest/ext/http/server.cr","line_number":1,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/server.cr"},{"filename":"onyx-rest/ext/http/request/path_params.cr","line_number":1,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/request/path_params.cr"},{"filename":"lib/http-params-serializable/src/http-params-serializable/annotations.cr","line_number":1,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/lib/http-params-serializable/src/http-params-serializable/annotations.cr"},{"filename":"onyx-rest/ext/http.cr","line_number":2,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http.cr"},{"filename":"onyx-rest/ext/http/request.cr","line_number":1,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/request.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Extensions to the standard `HTTP` module.","summary":"<p>Extensions to the standard <code><a href=\"HTTP.html\">HTTP</a></code> module.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/onyxframework/rest/HTTP/Request","path":"HTTP/Request.html","kind":"class","full_name":"HTTP::Request","name":"Request","abstract":false,"superclass":{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/rest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-rest/ext/http/request/id.cr","line_number":2,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/request/id.cr"},{"filename":"onyx-rest/ext/http/request/path_params.cr","line_number":2,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/request/path_params.cr"},{"filename":"onyx-rest/ext/http/request.cr","line_number":3,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/request.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/rest/HTTP","kind":"module","full_name":"HTTP","name":"HTTP"},"doc":"Extensions to the standard `HTTP::Request` class.","summary":"<p>Extensions to the standard <code><a href=\"../HTTP/Request.html\">HTTP::Request</a></code> class.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"id-instance-method","html_id":"id-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id.not_nil!"}},{"id":"id=(id:String)-instance-method","html_id":"id=(id:String)-instance-method","name":"id=","doc":"A request ID. Can be set by `Onyx::REST::RequestID`.","summary":"<p>A request ID.</p>","abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"String"}],"args_string":"(id : String)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/request/id.cr#L4","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/request/id.cr#L4","def":{"name":"id=","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = id"}},{"id":"id?:String?-instance-method","html_id":"id?:String?-instance-method","name":"id?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"source_link":null,"def":{"name":"id?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"path_params:Hash(String,String)-instance-method","html_id":"path_params:Hash(String,String)-instance-method","name":"path_params","doc":"A hash containing path params (extracted from the request's path).\nIt's automatically set when routing with `Onyx::REST::Router`, empty by default.\n\nFor example, request with path `\"/user/42/edit\"` is\nrouted with `put \"/user/:id/edit\"` will have `{\"id\" => \"42\"}` path params.\n\nNOTE: You must not modify this hash values directly (e.g. `req.path_params[\"foo\"] = \"bar\"`).\nTODO: Make this hash immutable.","summary":"<p>A hash containing path params (extracted from the request's path).</p>","abstract":false,"args":[],"args_string":" : Hash(String, String)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/request/path_params.cr#L15","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/request/path_params.cr#L15","def":{"name":"path_params","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"@path_params"}},{"id":"path_params=(path_params:Hash(String,String))-instance-method","html_id":"path_params=(path_params:Hash(String,String))-instance-method","name":"path_params=","doc":"A hash containing path params (extracted from the request's path).\nIt's automatically set when routing with `Onyx::REST::Router`, empty by default.\n\nFor example, request with path `\"/user/42/edit\"` is\nrouted with `put \"/user/:id/edit\"` will have `{\"id\" => \"42\"}` path params.\n\nNOTE: You must not modify this hash values directly (e.g. `req.path_params[\"foo\"] = \"bar\"`).\nTODO: Make this hash immutable.","summary":"<p>A hash containing path params (extracted from the request's path).</p>","abstract":false,"args":[{"name":"path_params","doc":null,"default_value":"","external_name":"path_params","restriction":"Hash(String, String)"}],"args_string":"(path_params : Hash(String, String))","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/request/path_params.cr#L15","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/request/path_params.cr#L15","def":{"name":"path_params=","args":[{"name":"path_params","doc":null,"default_value":"","external_name":"path_params","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@path_params = path_params"}}],"macros":[],"types":[]},{"html_id":"github.com/onyxframework/rest/HTTP/Server","path":"HTTP/Server.html","kind":"class","full_name":"HTTP::Server","name":"Server","abstract":false,"superclass":{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/rest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-rest/ext/http/server/response.cr","line_number":2,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/server/response.cr"},{"filename":"onyx-rest/ext/http/server/response/error.cr","line_number":2,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/server/response/error.cr"},{"filename":"onyx-rest/ext/http/server/response/text.cr","line_number":2,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/server/response/text.cr"},{"filename":"onyx-rest/ext/http/server.cr","line_number":3,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/server.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/onyxframework/rest/Onyx/REST/Server","kind":"class","full_name":"Onyx::REST::Server","name":"Server"}],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/rest/HTTP","kind":"module","full_name":"HTTP","name":"HTTP"},"doc":"Extensions to the standard `HTTP::Server` class.","summary":"<p>Extensions to the standard <code><a href=\"../HTTP/Server.html\">HTTP::Server</a></code> class.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/onyxframework/rest/HTTP/Server/Response","path":"HTTP/Server/Response.html","kind":"class","full_name":"HTTP::Server::Response","name":"Response","abstract":false,"superclass":{"html_id":"github.com/onyxframework/rest/IO","kind":"class","full_name":"IO","name":"IO"},"ancestors":[{"html_id":"github.com/onyxframework/rest/IO","kind":"class","full_name":"IO","name":"IO"},{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/rest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-rest/ext/http/server/response.cr","line_number":4,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/server/response.cr"},{"filename":"onyx-rest/ext/http/server/response/error.cr","line_number":3,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/server/response/error.cr"},{"filename":"onyx-rest/ext/http/server/response/text.cr","line_number":3,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/server/response/text.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/rest/HTTP/Server","kind":"class","full_name":"HTTP::Server","name":"Server"},"doc":"Extensions to the standard `HTTP::Server::Response` class.","summary":"<p>Extensions to the standard <code><a href=\"../../HTTP/Server/Response.html\">HTTP::Server::Response</a></code> class.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"error:Exception?-instance-method","html_id":"error:Exception?-instance-method","name":"error","doc":"A rescued error which is likely to be put into the response.","summary":"<p>A rescued error which is likely to be put into the response.</p>","abstract":false,"args":[],"args_string":" : Exception?","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/server/response/error.cr#L5","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/server/response/error.cr#L5","def":{"name":"error","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Exception | ::Nil","visibility":"Public","body":"@error"}},{"id":"error=(error:Exception?)-instance-method","html_id":"error=(error:Exception?)-instance-method","name":"error=","doc":"A rescued error which is likely to be put into the response.","summary":"<p>A rescued error which is likely to be put into the response.</p>","abstract":false,"args":[{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"Exception | ::Nil"}],"args_string":"(error : Exception?)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/server/response/error.cr#L5","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/server/response/error.cr#L5","def":{"name":"error=","args":[{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"Exception | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@error = error"}},{"id":"text:String?-instance-method","html_id":"text:String?-instance-method","name":"text","doc":"A string which is likely to be appended to the response body.\nUsually set when an `Onyx::REST::Router` path proc returns a `String` value.","summary":"<p>A string which is likely to be appended to the response body.</p>","abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/server/response/text.cr#L6","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/server/response/text.cr#L6","def":{"name":"text","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@text"}},{"id":"text=(text:String?)-instance-method","html_id":"text=(text:String?)-instance-method","name":"text=","doc":"A string which is likely to be appended to the response body.\nUsually set when an `Onyx::REST::Router` path proc returns a `String` value.","summary":"<p>A string which is likely to be appended to the response body.</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String | ::Nil"}],"args_string":"(text : String?)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/server/response/text.cr#L6","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http/server/response/text.cr#L6","def":{"name":"text=","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@text = text"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/onyxframework/rest/Onyx","path":"Onyx.html","kind":"class","full_name":"Onyx","name":"Onyx","abstract":false,"superclass":{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/rest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-rest.cr","line_number":2,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Powerful framework for modern applications. See [onyxframework.org](https://onyxframework.org).","summary":"<p>Powerful framework for modern applications.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/onyxframework/rest/Onyx/REST","path":"Onyx/REST.html","kind":"class","full_name":"Onyx::REST","name":"REST","abstract":false,"superclass":{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/rest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-rest.cr","line_number":4,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest.cr"},{"filename":"onyx-rest/loggers/standard.cr","line_number":6,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/loggers/standard.cr"},{"filename":"onyx-rest/renderers/json.cr","line_number":6,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/renderers/json.cr"},{"filename":"onyx-rest/rescuers/standard.cr","line_number":5,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuers/standard.cr"},{"filename":"onyx-rest/errors/not_found.cr","line_number":1,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/errors/not_found.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/rest/Onyx","kind":"class","full_name":"Onyx","name":"Onyx"},"doc":"An opinionated REST API framework for Crystal.","summary":"<p>An opinionated REST API framework for Crystal.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/onyxframework/rest/Onyx/REST/CORS","path":"Onyx/REST/CORS.html","kind":"class","full_name":"Onyx::REST::CORS","name":"CORS","abstract":false,"superclass":{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/rest/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/rest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-rest/cors.cr","line_number":8,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/cors.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/onyxframework/rest/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/rest/Onyx/REST","kind":"class","full_name":"Onyx::REST","name":"REST"},"doc":"Extracted from [kemalyst](https://github.com/kemalyst/kemalyst/blob/master/src/kemalyst/handler/cors.cr) (MIT licensed).\n\nCopyright (c) 2016 dru.jensen\n\nSee [CORS on Wiki](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing).","summary":"<p>Extracted from <a href=\"https://github.com/kemalyst/kemalyst/blob/master/src/kemalyst/handler/cors.cr\" target=\"_blank\">kemalyst</a> (MIT licensed).</p>","class_methods":[],"constructors":[{"id":"new(*,allow_origin=&quot;*&quot;,allow_headers=[&quot;accept&quot;,&quot;content-type&quot;]of::String,allow_methods=[&quot;GET&quot;,&quot;HEAD&quot;,&quot;POST&quot;,&quot;DELETE&quot;,&quot;OPTIONS&quot;,&quot;PUT&quot;,&quot;PATCH&quot;]of::String,allow_credentials=false,max_age=0)-class-method","html_id":"new(*,allow_origin=&amp;quot;*&amp;quot;,allow_headers=[&amp;quot;accept&amp;quot;,&amp;quot;content-type&amp;quot;]of::String,allow_methods=[&amp;quot;GET&amp;quot;,&amp;quot;HEAD&amp;quot;,&amp;quot;POST&amp;quot;,&amp;quot;DELETE&amp;quot;,&amp;quot;OPTIONS&amp;quot;,&amp;quot;PUT&amp;quot;,&amp;quot;PATCH&amp;quot;]of::String,allow_credentials=false,max_age=0)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"allow_origin","doc":null,"default_value":"\"*\"","external_name":"allow_origin","restriction":""},{"name":"allow_headers","doc":null,"default_value":"[\"accept\", \"content-type\"] of ::String","external_name":"allow_headers","restriction":""},{"name":"allow_methods","doc":null,"default_value":"[\"GET\", \"HEAD\", \"POST\", \"DELETE\", \"OPTIONS\", \"PUT\", \"PATCH\"] of ::String","external_name":"allow_methods","restriction":""},{"name":"allow_credentials","doc":null,"default_value":"false","external_name":"allow_credentials","restriction":""},{"name":"max_age","doc":null,"default_value":"0","external_name":"max_age","restriction":""}],"args_string":"(*, allow_origin = <span class=\"s\">&quot;*&quot;</span>, allow_headers = [<span class=\"s\">&quot;accept&quot;</span>, <span class=\"s\">&quot;content-type&quot;</span>] <span class=\"k\">of</span> <span class=\"t\">::</span><span class=\"t\">String</span>, allow_methods = [<span class=\"s\">&quot;GET&quot;</span>, <span class=\"s\">&quot;HEAD&quot;</span>, <span class=\"s\">&quot;POST&quot;</span>, <span class=\"s\">&quot;DELETE&quot;</span>, <span class=\"s\">&quot;OPTIONS&quot;</span>, <span class=\"s\">&quot;PUT&quot;</span>, <span class=\"s\">&quot;PATCH&quot;</span>] <span class=\"k\">of</span> <span class=\"t\">::</span><span class=\"t\">String</span>, allow_credentials = <span class=\"n\">false</span>, max_age = <span class=\"n\">0</span>)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/cors.cr#L11","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/cors.cr#L11","def":{"name":"new","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"allow_origin","doc":null,"default_value":"\"*\"","external_name":"allow_origin","restriction":""},{"name":"allow_headers","doc":null,"default_value":"[\"accept\", \"content-type\"] of ::String","external_name":"allow_headers","restriction":""},{"name":"allow_methods","doc":null,"default_value":"[\"GET\", \"HEAD\", \"POST\", \"DELETE\", \"OPTIONS\", \"PUT\", \"PATCH\"] of ::String","external_name":"allow_methods","restriction":""},{"name":"allow_credentials","doc":null,"default_value":"false","external_name":"allow_credentials","restriction":""},{"name":"max_age","doc":null,"default_value":"0","external_name":"max_age","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(allow_origin: allow_origin, allow_headers: allow_headers, allow_methods: allow_methods, allow_credentials: allow_credentials, max_age: max_age)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/onyxframework/rest/Onyx/REST/Error","path":"Onyx/REST/Error.html","kind":"class","full_name":"Onyx::REST::Error(Code)","name":"Error","abstract":false,"superclass":{"html_id":"github.com/onyxframework/rest/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/onyxframework/rest/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/rest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-rest/error.cr","line_number":39,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/error.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/onyxframework/rest/Onyx/REST/Errors/NotFound","kind":"class","full_name":"Onyx::REST::Errors::NotFound","name":"NotFound"},{"html_id":"github.com/onyxframework/rest/Onyx/REST/Errors/ParamsError","kind":"class","full_name":"Onyx::REST::Errors::ParamsError","name":"ParamsError"}],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/rest/Onyx/REST","kind":"class","full_name":"Onyx::REST","name":"REST"},"doc":"A REST error which is expected to be rescued upon processing (i.e. in `Onyx::REST::Router`).\nDefine your own errors to handle **expected** situations:\n\n```\nclass UserNotFound < Onyx::REST::Error(404)\n  def initialize(@id : Int32)\n    super(\"User not found with ID #{@id}\")\n  end\n\n  def payload\n    {id: @id}\n  end\nend\n\n# Will return 404 erorr if a user isn't found by the ID\nrouter.get \"/users/:id\" do |env|\n  id = env.request.path_params[\"id\"]?.to_i?\n  raise UserNotFound.new(id) unless Models::User.find?(id)\nend\n```\n\nIn case of error, a plain text response status and body will be\n`404` and `\"404 User not found with ID 42\"` respectively.\n\n`Onyx::REST::Renderers::JSON` takes care of the error's `#payload`, rendering it appropriately:\n\n```json\n{\n  \"error\": {\n    \"class\": \"UserNotFound\",\n    \"message\": \"User not found with ID 42\",\n    \"code\": 404,\n    \"payload\": {\n      \"id\": 42\n    }\n  }\n}\n```","summary":"<p>A REST error which is expected to be rescued upon processing (i.e.</p>","class_methods":[],"constructors":[{"id":"new(message:String)-class-method","html_id":"new(message:String)-class-method","name":"new","doc":"Initialize the error with a *message*.","summary":"<p>Initialize the error with a <em>message</em>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"args_string":"(message : String)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/error.cr#L55","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/error.cr#L55","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Error(Code).allocate\n_.initialize(message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Initialize the error with default message, which is its class name splitted with space\n(e.g. `\"User Not Found\"` for `UserNotFound` error).","summary":"<p>Initialize the error with default message, which is its class name splitted with space (e.g.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/error.cr#L50","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/error.cr#L50","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Error(Code).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"code:Int32-instance-method","html_id":"code:Int32-instance-method","name":"code","doc":"The HTTP status code of this error.","summary":"<p>The HTTP status code of this error.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/error.cr#L41","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/error.cr#L41","def":{"name":"code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@code"}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":"The name of the error. By default returns its class name.","summary":"<p>The name of the error.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/error.cr#L44","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/error.cr#L44","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{{ (@type.name.split(\"::\")).last }}"}},{"id":"payload-instance-method","html_id":"payload-instance-method","name":"payload","doc":"The error payload. Usually used by custom renderers, for example,\n`Onyx::REST::Renderers::JSON` calls `error.payload.try &.to_json`.\nReturns `nil` by default.","summary":"<p>The error payload.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/error.cr#L62","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/error.cr#L62","def":{"name":"payload","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/onyxframework/rest/Onyx/REST/Errors","path":"Onyx/REST/Errors.html","kind":"module","full_name":"Onyx::REST::Errors","name":"Errors","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"onyx-rest/errors/not_found.cr","line_number":3,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/errors/not_found.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/rest/Onyx/REST","kind":"class","full_name":"Onyx::REST","name":"REST"},"doc":"Known REST errors, usually rescued within the stack.","summary":"<p>Known REST errors, usually rescued within the stack.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/onyxframework/rest/Onyx/REST/Errors/NotFound","path":"Onyx/REST/Errors/NotFound.html","kind":"class","full_name":"Onyx::REST::Errors::NotFound","name":"NotFound","abstract":false,"superclass":{"html_id":"github.com/onyxframework/rest/Onyx/REST/Error","kind":"class","full_name":"Onyx::REST::Error","name":"Error"},"ancestors":[{"html_id":"github.com/onyxframework/rest/Onyx/REST/Error","kind":"class","full_name":"Onyx::REST::Error","name":"Error"},{"html_id":"github.com/onyxframework/rest/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/rest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-rest/errors/not_found.cr","line_number":5,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/errors/not_found.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/rest/Onyx/REST/Errors","kind":"module","full_name":"Onyx::REST::Errors","name":"Errors"},"doc":"This error is raised internally when a route is not found.","summary":"<p>This error is raised internally when a route is not found.</p>","class_methods":[],"constructors":[{"id":"new(method:String,path:String)-class-method","html_id":"new(method:String,path:String)-class-method","name":"new","doc":"Call `super(\"Not Found\")`.","summary":"<p>Call <code>super(\"Not Found\")</code>.</p>","abstract":false,"args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"String"},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(method : String, path : String)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/errors/not_found.cr#L13","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/errors/not_found.cr#L13","def":{"name":"new","args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"String"},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(method, path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"method:String-instance-method","html_id":"method:String-instance-method","name":"method","doc":"The HTTP method which was used in the request (e.g. \"GET\").","summary":"<p>The HTTP method which was used in the request (e.g.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/errors/not_found.cr#L7","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/errors/not_found.cr#L7","def":{"name":"method","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@method"}},{"id":"path:String-instance-method","html_id":"path:String-instance-method","name":"path","doc":"The request path (e.g. \"/foo\").","summary":"<p>The request path (e.g.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/errors/not_found.cr#L10","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/errors/not_found.cr#L10","def":{"name":"path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@path"}},{"id":"payload-instance-method","html_id":"payload-instance-method","name":"payload","doc":"Return `{method: @method, path: @path}`.","summary":"<p>Return <code>{method: @method, path: @path}</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/errors/not_found.cr#L18","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/errors/not_found.cr#L18","def":{"name":"payload","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{method: @method, path: @path}"}}],"macros":[],"types":[]},{"html_id":"github.com/onyxframework/rest/Onyx/REST/Errors/ParamsError","path":"Onyx/REST/Errors/ParamsError.html","kind":"class","full_name":"Onyx::REST::Errors::ParamsError","name":"ParamsError","abstract":false,"superclass":{"html_id":"github.com/onyxframework/rest/Onyx/REST/Error","kind":"class","full_name":"Onyx::REST::Error","name":"Error"},"ancestors":[{"html_id":"github.com/onyxframework/rest/Onyx/REST/Error","kind":"class","full_name":"Onyx::REST::Error","name":"Error"},{"html_id":"github.com/onyxframework/rest/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/rest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-rest/ext/http-params-serializable/onyx/rest/errors/params_error.cr","line_number":4,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http-params-serializable/onyx/rest/errors/params_error.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/rest/Onyx/REST/Errors","kind":"module","full_name":"Onyx::REST::Errors","name":"Errors"},"doc":"An expected `HTTP::Params::Serializable` error.","summary":"<p>An expected <code>HTTP::Params::Serializable</code> error.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"payload-instance-method","html_id":"payload-instance-method","name":"payload","doc":"Return `{path: @path}`, where `@path` is the path to the param\n(e.g. `[\"foo\", \"bar\"]` for `\"foo[bar]=baz\"` param).","summary":"<p>Return <code>{path: @path}</code>, where <code>@path</code> is the path to the param (e.g.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http-params-serializable/onyx/rest/errors/params_error.cr#L12","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/ext/http-params-serializable/onyx/rest/errors/params_error.cr#L12","def":{"name":"payload","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{path: @path}"}}],"macros":[],"types":[]}]},{"html_id":"github.com/onyxframework/rest/Onyx/REST/Loggers","path":"Onyx/REST/Loggers.html","kind":"module","full_name":"Onyx::REST::Loggers","name":"Loggers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"onyx-rest/loggers/standard.cr","line_number":8,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/loggers/standard.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/rest/Onyx/REST","kind":"class","full_name":"Onyx::REST","name":"REST"},"doc":"HTTP handlers which log requests.","summary":"<p>HTTP handlers which log requests.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/onyxframework/rest/Onyx/REST/Loggers/Standard","path":"Onyx/REST/Loggers/Standard.html","kind":"class","full_name":"Onyx::REST::Loggers::Standard","name":"Standard","abstract":false,"superclass":{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/rest/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/rest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-rest/loggers/standard.cr","line_number":24,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/loggers/standard.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/onyxframework/rest/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/rest/Onyx/REST/Loggers","kind":"module","full_name":"Onyx::REST::Loggers","name":"Loggers"},"doc":"Logs requests colorfully into specified standard *logger*.\nIt also logs the `HTTP::Request#id` if it's present.\nShould be put in the beginning of the stack.\n\n```\nlogger = Onyx::REST::Loggers::Standard.new\n\nhandlers << request_id\nhandlers << logger\nhandlers << router\n\n#   INFO -- :     GET /users 200 102μs\n#   INFO -- :     GET /favicon.ico 404 52μs\n#   INFO -- :    POST /users 201 3.74ms\n```","summary":"<p>Logs requests colorfully into specified standard <em>logger</em>.</p>","class_methods":[],"constructors":[{"id":"new(logger:Logger=Logger.new(STDOUT),*,severity:Logger::Severity=Logger::INFO,query:Bool=true)-class-method","html_id":"new(logger:Logger=Logger.new(STDOUT),*,severity:Logger::Severity=Logger::INFO,query:Bool=true)-class-method","name":"new","doc":"Set *query* to `false` to turn off logging requests' queries.","summary":"<p>Set <em>query</em> to <code>false</code> to turn off logging requests' queries.</p>","abstract":false,"args":[{"name":"logger","doc":null,"default_value":"Logger.new(STDOUT)","external_name":"logger","restriction":"Logger"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"severity","doc":null,"default_value":"Logger::INFO","external_name":"severity","restriction":"Logger::Severity"},{"name":"query","doc":null,"default_value":"true","external_name":"query","restriction":"Bool"}],"args_string":"(logger : Logger = <span class=\"t\">Logger</span>.<span class=\"k\">new</span>(<span class=\"t\">STDOUT</span>), *, severity : Logger::Severity = <span class=\"t\">Logger</span><span class=\"t\">::</span><span class=\"t\">INFO</span>, query : Bool = <span class=\"n\">true</span>)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/loggers/standard.cr#L37","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/loggers/standard.cr#L37","def":{"name":"new","args":[{"name":"logger","doc":null,"default_value":"Logger.new(STDOUT)","external_name":"logger","restriction":"Logger"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"severity","doc":null,"default_value":"Logger::INFO","external_name":"severity","restriction":"Logger::Severity"},{"name":"query","doc":null,"default_value":"true","external_name":"query","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(logger, severity: severity, query: query)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(context)-instance-method","html_id":"call(context)-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"args_string":"(context)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/loggers/standard.cr#L45","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/loggers/standard.cr#L45","def":{"name":"call","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"started_at = Time.monotonic\nif context.request.id?\n  request_id = \"[#{context.request.id[0...8]}]\".colorize(:dark_gray)\nend\nwebsocket = context.request.headers.includes_word?(\"Upgrade\", \"Websocket\")\nif websocket\n  method = ((\"WS\".rjust(7)).colorize(color(100))).mode(:bold)\n  progess = \"pending\".colorize(:dark_gray)\n  resource = context.request.path\n  if resource.size < 2\n  else\n    resource = resource.rstrip('/')\n  end\n  if @query && (query = context.request.query)\n    resource = resource + \"?#{query}\"\n  end\n  resource = resource.colorize(color(100))\n  @logger.log(@severity, \"#{request_id}#{method} #{resource} #{progess}\")\nend\nbegin\n  call_next(context)\nensure\n  color = color(context.response.status_code)\n  method = (((websocket ? \"WS\" : context.request.method).rjust(7)).colorize(color)).mode(:bold)\n  status_code = (context.response.status_code.colorize(color)).mode(:bold)\n  resource = context.request.path\n  if resource.size < 2\n  else\n    resource = resource.rstrip('/')\n  end\n  if @query && (query = context.request.query)\n    resource = resource + \"?#{query}\"\n  end\n  resource = resource.colorize(color)\n  @logger.log(@severity, \"#{request_id}#{method} #{resource} #{status_code} #{(TimeFormat.auto(Time.monotonic - started_at)).colorize(:dark_gray)}\")\nend\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/onyxframework/rest/Onyx/REST/Renderers","path":"Onyx/REST/Renderers.html","kind":"module","full_name":"Onyx::REST::Renderers","name":"Renderers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"onyx-rest/renderers/json.cr","line_number":8,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/renderers/json.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/rest/Onyx/REST","kind":"class","full_name":"Onyx::REST","name":"REST"},"doc":"HTTP handlers which render content.","summary":"<p>HTTP handlers which render content.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/onyxframework/rest/Onyx/REST/Renderers/JSON","path":"Onyx/REST/Renderers/JSON.html","kind":"class","full_name":"Onyx::REST::Renderers::JSON","name":"JSON","abstract":false,"superclass":{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/rest/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/rest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-rest/renderers/json.cr","line_number":19,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/renderers/json.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/onyxframework/rest/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/rest/Onyx/REST/Renderers","kind":"module","full_name":"Onyx::REST::Renderers","name":"Renderers"},"doc":"A JSON renderer. If `HTTP::Server::Response#error` is present, prints it as a JSON object.\nOtherwise, if `HTTP::Server::Response#text` is present, prints it as is.\nShould be put after a router (i.e. `Onyx::REST::Router`).\nCalls the next handler if it's present.\n\n```\nrenderer = Onyx::REST::Renderers::JSON\nhandlers << router\nhandlers << renderer\n```","summary":"<p>A JSON renderer.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/onyxframework/rest/Onyx/REST/RequestID","path":"Onyx/REST/RequestID.html","kind":"class","full_name":"Onyx::REST::RequestID","name":"RequestID","abstract":false,"superclass":{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/rest/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/rest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-rest/request_id.cr","line_number":8,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/request_id.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/onyxframework/rest/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/rest/Onyx/REST","kind":"class","full_name":"Onyx::REST","name":"REST"},"doc":"Sets `HTTP::Request#id` and `\"X-Request-ID\"` header to a random `UUID` string.\nIf a request has an ID, it's printed upon logging in\n`Onyx::REST::Loggers::Standard` and `Onyx::REST::Rescuers::Standard` handlers.","summary":"<p>Sets <code><a href=\"../../HTTP/Request.html#id-instance-method\">HTTP::Request#id</a></code> and <code>\"X-Request-ID\"</code> header to a random <code>UUID</code> string.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"call(context)-instance-method","html_id":"call(context)-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"args_string":"(context)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/request_id.cr#L11","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/request_id.cr#L11","def":{"name":"call","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"id = UUID.random.to_s\ncontext.request.id = id\ncontext.response.headers[\"X-Request-ID\"] = id\ncall_next(context)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/onyxframework/rest/Onyx/REST/Rescuer","path":"Onyx/REST/Rescuer.html","kind":"class","full_name":"Onyx::REST::Rescuer(T)","name":"Rescuer","abstract":true,"superclass":{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/rest/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/rest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-rest/rescuer.cr","line_number":8,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuer.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/onyxframework/rest/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/onyxframework/rest/HTTP/Params/Serializable/Rescuer","kind":"class","full_name":"HTTP::Params::Serializable::Rescuer","name":"Rescuer"},{"html_id":"github.com/onyxframework/rest/Onyx/REST/Rescuers/Standard","kind":"class","full_name":"Onyx::REST::Rescuers::Standard","name":"Standard"}],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/rest/Onyx/REST","kind":"class","full_name":"Onyx::REST","name":"REST"},"doc":"Rescues `T`. Firstly calls `#process` to handle the error (e.g. log it).\nThen if `#handler` is present, calls `#before_handler` and then the handler itself.\nOtherwise calls `#fallback`.\n\nSee `Onyx::REST::Rescuers::Standard`.","summary":"<p>Rescues <code>T</code>.</p>","class_methods":[],"constructors":[{"id":"new(handler:HTTP::Handler?=nil)-class-method","html_id":"new(handler:HTTP::Handler?=nil)-class-method","name":"new","doc":"Initialize with a *handler* to call when a error is rescued.","summary":"<p>Initialize with a <em>handler</em> to call when a error is rescued.</p>","abstract":false,"args":[{"name":"handler","doc":null,"default_value":"nil","external_name":"handler","restriction":"HTTP::Handler | ::Nil"}],"args_string":"(handler : HTTP::Handler? = <span class=\"n\">nil</span>)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuer.cr#L15","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuer.cr#L15","def":{"name":"new","args":[{"name":"handler","doc":null,"default_value":"nil","external_name":"handler","restriction":"HTTP::Handler | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Rescuer(T).allocate\n_.initialize(handler)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"before_handler(context:HTTP::Server::Context,error:T)-instance-method","html_id":"before_handler(context:HTTP::Server::Context,error:T)-instance-method","name":"before_handler","doc":"Called if `#handler` is set before it's called. Empty by default.","summary":"<p>Called if <code><a href=\"../../Onyx/REST/Rescuer.html#handler%3AHTTP%3A%3AHandler%3F-instance-method\">#handler</a></code> is set before it's called.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"HTTP::Server::Context"},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"T"}],"args_string":"(context : HTTP::Server::Context, error : T)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuer.cr#L40","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuer.cr#L40","def":{"name":"before_handler","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"HTTP::Server::Context"},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"fallback(context:HTTP::Server::Context,error:T)-instance-method","html_id":"fallback(context:HTTP::Server::Context,error:T)-instance-method","name":"fallback","doc":"Called if no `#handler` is set.\n\nFIXME: Make abstract, so it raises if not defined in children. See https://github.com/crystal-lang/crystal/issues/6762.","summary":"<p>Called if no <code><a href=\"../../Onyx/REST/Rescuer.html#handler%3AHTTP%3A%3AHandler%3F-instance-method\">#handler</a></code> is set.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"HTTP::Server::Context"},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"T"}],"args_string":"(context : HTTP::Server::Context, error : T)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuer.cr#L47","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuer.cr#L47","def":{"name":"fallback","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"HTTP::Server::Context"},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(self))"}},{"id":"handler:HTTP::Handler?-instance-method","html_id":"handler:HTTP::Handler?-instance-method","name":"handler","doc":"A handler to call when a error is rescued. If it's missing, calls `#fallback`.","summary":"<p>A handler to call when a error is rescued.</p>","abstract":false,"args":[],"args_string":" : HTTP::Handler?","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuer.cr#L12","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuer.cr#L12","def":{"name":"handler","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Handler | ::Nil","visibility":"Public","body":"@handler"}},{"id":"handler=(handler:HTTP::Handler?)-instance-method","html_id":"handler=(handler:HTTP::Handler?)-instance-method","name":"handler=","doc":"A handler to call when a error is rescued. If it's missing, calls `#fallback`.","summary":"<p>A handler to call when a error is rescued.</p>","abstract":false,"args":[{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"HTTP::Handler | ::Nil"}],"args_string":"(handler : HTTP::Handler?)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuer.cr#L12","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuer.cr#L12","def":{"name":"handler=","args":[{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"HTTP::Handler | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@handler = handler"}},{"id":"process(context:HTTP::Server::Context,error:T)-instance-method","html_id":"process(context:HTTP::Server::Context,error:T)-instance-method","name":"process","doc":"Process the error before further handling. A good example is logging it.\n\nFIXME: Make abstract, so it raises if not defined in children. See https://github.com/crystal-lang/crystal/issues/6762.","summary":"<p>Process the error before further handling.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"HTTP::Server::Context"},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"T"}],"args_string":"(context : HTTP::Server::Context, error : T)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuer.cr#L35","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuer.cr#L35","def":{"name":"process","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"HTTP::Server::Context"},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(self))"}}],"macros":[],"types":[]},{"html_id":"github.com/onyxframework/rest/Onyx/REST/Rescuers","path":"Onyx/REST/Rescuers.html","kind":"module","full_name":"Onyx::REST::Rescuers","name":"Rescuers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"onyx-rest/rescuers/standard.cr","line_number":7,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuers/standard.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/rest/Onyx/REST","kind":"class","full_name":"Onyx::REST","name":"REST"},"doc":"HTTP handlers which rescue errors.","summary":"<p>HTTP handlers which rescue errors.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/onyxframework/rest/Onyx/REST/Rescuers/Standard","path":"Onyx/REST/Rescuers/Standard.html","kind":"class","full_name":"Onyx::REST::Rescuers::Standard","name":"Standard","abstract":false,"superclass":{"html_id":"github.com/onyxframework/rest/Onyx/REST/Rescuer","kind":"class","full_name":"Onyx::REST::Rescuer","name":"Rescuer"},"ancestors":[{"html_id":"github.com/onyxframework/rest/Onyx/REST/Rescuer","kind":"class","full_name":"Onyx::REST::Rescuer","name":"Rescuer"},{"html_id":"github.com/onyxframework/rest/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/rest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-rest/rescuers/standard.cr","line_number":35,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuers/standard.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/rest/Onyx/REST/Rescuers","kind":"module","full_name":"Onyx::REST::Rescuers","name":"Rescuers"},"doc":"A handler which rescues all `Exception`s and logs them colorfully into a standard `Logger`.\nIt sets `HTTP::Server::Response#error` to the error instance before *handler* call,\notherwise prints the `\"500 Internal Server Error\"` message into the response body.\nIt also logs the `HTTP::Request#id` if it's present.\nShould be put after logger in the stack.\n\n```\n# Will print \"500 Internal Server Error\" into the response\nrescuer = Onyx::REST::Rescuers::Standard.new\nhandlers << logger\nhandlers << rescuer\nhandlers << router\n```\n\n```\nrenderer = Onyx::REST::Renderers::JSON.new\n\n# Will update `context.response.error` and call the renderer\nrescuer = Onyx::REST::Rescuers::Standard.new(renderer)\n\nhandlers << logger\nhandlers << rescuer\nhandlers << router\nhandlers << renderer\n```\n\nFIXME: Make generic. See [https://github.com/crystal-lang/crystal/issues/7200](https://github.com/crystal-lang/crystal/issues/7200).","summary":"<p>A handler which rescues all <code>Exception</code>s and logs them colorfully into a standard <code>Logger</code>.</p>","class_methods":[],"constructors":[{"id":"new(handler:HTTP::Handler?=nil,*,logger:Logger=Logger.new(STDERR),verbose:Bool=true)-class-method","html_id":"new(handler:HTTP::Handler?=nil,*,logger:Logger=Logger.new(STDERR),verbose:Bool=true)-class-method","name":"new","doc":"Set *verbose* to `false` to turn off logging errors' backtraces.","summary":"<p>Set <em>verbose</em> to <code>false</code> to turn off logging errors' backtraces.</p>","abstract":false,"args":[{"name":"handler","doc":null,"default_value":"nil","external_name":"handler","restriction":"HTTP::Handler | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"logger","doc":null,"default_value":"Logger.new(STDERR)","external_name":"logger","restriction":"Logger"},{"name":"verbose","doc":null,"default_value":"true","external_name":"verbose","restriction":"Bool"}],"args_string":"(handler : HTTP::Handler? = <span class=\"n\">nil</span>, *, logger : Logger = <span class=\"t\">Logger</span>.<span class=\"k\">new</span>(<span class=\"t\">STDERR</span>), verbose : Bool = <span class=\"n\">true</span>)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuers/standard.cr#L40","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuers/standard.cr#L40","def":{"name":"new","args":[{"name":"handler","doc":null,"default_value":"nil","external_name":"handler","restriction":"HTTP::Handler | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"logger","doc":null,"default_value":"Logger.new(STDERR)","external_name":"logger","restriction":"Logger"},{"name":"verbose","doc":null,"default_value":"true","external_name":"verbose","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(handler, logger: logger, verbose: verbose)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"before_handler(context:HTTP::Server::Context,error:Exception)-instance-method","html_id":"before_handler(context:HTTP::Server::Context,error:Exception)-instance-method","name":"before_handler","doc":"Update `HTTP::Server::Response#error` with *error*.","summary":"<p>Update <code><a href=\"../../../HTTP/Server/Response.html#error%3AException%3F-instance-method\">HTTP::Server::Response#error</a></code> with <em>error</em>.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"HTTP::Server::Context"},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"Exception"}],"args_string":"(context : HTTP::Server::Context, error : Exception)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuers/standard.cr#L69","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuers/standard.cr#L69","def":{"name":"before_handler","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"HTTP::Server::Context"},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"Exception"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"context.response.error = error"}},{"id":"fallback(context:HTTP::Server::Context,error:Exception)-instance-method","html_id":"fallback(context:HTTP::Server::Context,error:Exception)-instance-method","name":"fallback","doc":"Print `\"500 Internal Server Error\"` into the response body.","summary":"<p>Print <code>\"500 Internal <a href=\"../../../Onyx/REST/Server.html\">Server</a> <a href=\"../../../Onyx/REST/Error.html\">Error</a>\"</code> into the response body.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"HTTP::Server::Context"},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"Exception"}],"args_string":"(context : HTTP::Server::Context, error : Exception)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuers/standard.cr#L74","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuers/standard.cr#L74","def":{"name":"fallback","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"HTTP::Server::Context"},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"Exception"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"context.response.respond_with_error"}},{"id":"logger:Logger-instance-method","html_id":"logger:Logger-instance-method","name":"logger","doc":"A `Logger` to log to. Can be changed in runtime.","summary":"<p>A <code>Logger</code> to log to.</p>","abstract":false,"args":[],"args_string":" : Logger","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuers/standard.cr#L37","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuers/standard.cr#L37","def":{"name":"logger","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Logger","visibility":"Public","body":"@logger"}},{"id":"logger=(logger:Logger)-instance-method","html_id":"logger=(logger:Logger)-instance-method","name":"logger=","doc":"A `Logger` to log to. Can be changed in runtime.","summary":"<p>A <code>Logger</code> to log to.</p>","abstract":false,"args":[{"name":"logger","doc":null,"default_value":"","external_name":"logger","restriction":"Logger"}],"args_string":"(logger : Logger)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuers/standard.cr#L37","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuers/standard.cr#L37","def":{"name":"logger=","args":[{"name":"logger","doc":null,"default_value":"","external_name":"logger","restriction":"Logger"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@logger = logger"}},{"id":"process(context:HTTP::Server::Context,error:Exception)-instance-method","html_id":"process(context:HTTP::Server::Context,error:Exception)-instance-method","name":"process","doc":"Log the *error* into the `#logger`.","summary":"<p>Log the <em>error</em> into the <code><a href=\"../../../Onyx/REST/Rescuers/Standard.html#logger%3ALogger-instance-method\">#logger</a></code>.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"HTTP::Server::Context"},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"Exception"}],"args_string":"(context : HTTP::Server::Context, error : Exception)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuers/standard.cr#L50","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/rescuers/standard.cr#L50","def":{"name":"process","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"HTTP::Server::Context"},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"Exception"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io = IO::Memory.new\nif id = context.request.id?\n  io << (\"[#{id[0...8]}] \".colorize(:dark_gray))\nend\nio << (((\" ERROR \".rjust(7)).colorize.mode(:bold)).back(:red))\n(io << \" \") << (error.message || \"<Empty message error>\")\nif @verbose\n  (io << \"\\n\\n\") << (error.inspect_with_backtrace.colorize(:light_gray))\nend\n@logger.error(io.to_s)\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/onyxframework/rest/Onyx/REST/Router","path":"Onyx/REST/Router.html","kind":"class","full_name":"Onyx::REST::Router","name":"Router","abstract":false,"superclass":{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/rest/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/rest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-rest/router.cr","line_number":44,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/onyxframework/rest/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/rest/Onyx/REST","kind":"class","full_name":"Onyx::REST","name":"REST"},"doc":"Routes a request's path, assigning matching proc to `HTTP::Server::Context#proc`\nand path params to `HTTP::Request#path_params`. Calls the next handler in the stack\nregardless of the lookup result. If there is no next handler, processes the request itself,\nacting as a plain text renderer and properly rescuing `Onyx::REST::Error`s.\n\nIf the method block (e.g. `get \"/\" { \"this is the block\" }`) returns `String`, then\n`HTTP::Server::Response#text` variable is set to that string an handled afterwards.\nIn case of the router processing the proc itself, the `text` variable content\nis printed into the response body with trailing `\"\\n\"`.\n\nTo change how the request is processed, put a handler right after the router,\ne.g. `Onyx::Renderers::JSON`.\n\n```\nrouter = Onyx::REST::Router.new do\n  # Response body: Hello World!\\n\n  get \"/\" do\n    \"Hello World!\"\n  end\n\n  # Response body: Hello World!\n  get \"/\" do |env|\n    env.response.print(\"Hello world!\")\n  end\n\n  ws \"/\" do |socket, env|\n    socket.on_message do |message|\n      # ...\n    end\n  end\nend\n\nserver = Onyx::REST::Server.new([router])\n```","summary":"<p>Routes a request's path, assigning matching proc to <code>HTTP::Server::Context#proc</code> and path params to <code><a href=\"../../HTTP/Request.html#path_params%3AHash%28String%2CString%29-instance-method\">HTTP::Request#path_params</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(&block)-class-method","html_id":"new(&amp;block)-class-method","name":"new","doc":"Initialize a new router and yield it. You should then define routes in the *&block*.\n\n```\n# The simplest router\nrouter = Onyx::REST::Router.new do\n  get \"/\" do\n    \"Hello world!\"\n  end\nend\n```","summary":"<p>Initialize a new router and yield it.</p>","abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L66","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L66","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"instance = new\nwith instance yield\ninstance\n"}}],"instance_methods":[{"id":"call(context)-instance-method","html_id":"call(context)-instance-method","name":"call","doc":"Lookup for a route, set `context.proc` and `context.request.path_params` regardless\nof the result and then call the next handler if it is present, otherwise process itself.","summary":"<p>Lookup for a route, set <code>context.proc</code> and <code>context.request.path_params</code> regardless of the result and then call the next handler if it is present, otherwise process itself.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"args_string":"(context)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L74","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L74","def":{"name":"call","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if context.request.headers.includes_word?(\"Upgrade\", \"Websocket\")\n  path = \"/ws\" + (context.request.path.rstrip('/'))\n  result = lookup(path)\nelse\n  path = (\"/\" + context.request.method.downcase) + (context.request.path.rstrip('/'))\n  result = lookup(path)\nend\nbegin\n  if proc = result.payload\n    if params = result.params\n      context.request.path_params = params\n    end\n    proc.call(context)\n    if self.next\n      call_next(context)\n    else\n      if text = context.response.text\n        context.response.content_type = \"text/plain; charset=utf-8\"\n        (context.response.output << text) << \"\\n\"\n      end\n    end\n  else\n    raise(Onyx::REST::Errors::NotFound.new(context.request.method, context.request.path))\n  end\nrescue ex : REST::Error\n  if self.next\n    context.response.error = ex\n    call_next(context)\n  else\n    context.response.content_type = \"text/plain; charset=utf-8\"\n    context.response.status_code = ex.code\n    (((context.response.output << ex.code) << \" \") << ex.message) << \"\\n\"\n  end\nend\n"}},{"id":"delete(path,&proc:HTTP::Server::Context->_)-instance-method","html_id":"delete(path,&amp;proc:HTTP::Server::Context-&gt;_)-instance-method","name":"delete","doc":"Draw a route for *path* with `DELETE` method.\n\n```\nrouter = Onyx::REST::Router.new do\n  delete \"/bar\" do\n    \"Hello from DELETE /bar!\"\n  end\nend\n```","summary":"<p>Draw a route for <em>path</em> with <code>DELETE</code> method.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path, &proc : HTTP::Server::Context -> _)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L141","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L141","def":{"name":"delete","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"(HTTP::Server::Context -> _)"},"return_type":"","visibility":"Public","body":"on(path, [\"delete\"], &proc)"}},{"id":"draw(&block)-instance-method","html_id":"draw(&amp;block)-instance-method","name":"draw","doc":"Yield `with` self.\n\n```\nrouter.draw do\n  post \"/\" { }\n  get \"/\" { }\nend\n```","summary":"<p>Yield <code>with</code> self.</p>","abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L122","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L122","def":{"name":"draw","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"with self yield"}},{"id":"get(path,&proc:HTTP::Server::Context->_)-instance-method","html_id":"get(path,&amp;proc:HTTP::Server::Context-&gt;_)-instance-method","name":"get","doc":"Draw a route for *path* with `GET` method.\n\n```\nrouter = Onyx::REST::Router.new do\n  get \"/bar\" do\n    \"Hello from GET /bar!\"\n  end\nend\n```","summary":"<p>Draw a route for <em>path</em> with <code>GET</code> method.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path, &proc : HTTP::Server::Context -> _)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L141","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L141","def":{"name":"get","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"(HTTP::Server::Context -> _)"},"return_type":"","visibility":"Public","body":"on(path, [\"get\"], &proc)"}},{"id":"on(path,methods:Array(String),&proc:HTTP::Server::Context->_)-instance-method","html_id":"on(path,methods:Array(String),&amp;proc:HTTP::Server::Context-&gt;_)-instance-method","name":"on","doc":"Draw a route for *path* and *methods*.\n\n```\nrouter = Onyx::REST::Router.new do\n  on \"/foo\", methods: %w(get post) do |env|\n    \"Hello from #{env.request.method} /foo!\"\n  end\nend\n```","summary":"<p>Draw a route for <em>path</em> and <em>methods</em>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"methods","doc":null,"default_value":"","external_name":"methods","restriction":"Array(String)"}],"args_string":"(path, methods : Array(String), &proc : HTTP::Server::Context -> _)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L135","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L135","def":{"name":"on","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"methods","doc":null,"default_value":"","external_name":"methods","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"(HTTP::Server::Context -> _)"},"return_type":"","visibility":"Public","body":"methods.map(&.downcase).each do |method|\n  add((\"/\" + method) + path, proc)\nend"}},{"id":"options(path,&proc:HTTP::Server::Context->_)-instance-method","html_id":"options(path,&amp;proc:HTTP::Server::Context-&gt;_)-instance-method","name":"options","doc":"Draw a route for *path* with `OPTIONS` method.\n\n```\nrouter = Onyx::REST::Router.new do\n  options \"/bar\" do\n    \"Hello from OPTIONS /bar!\"\n  end\nend\n```","summary":"<p>Draw a route for <em>path</em> with <code>OPTIONS</code> method.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path, &proc : HTTP::Server::Context -> _)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L141","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L141","def":{"name":"options","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"(HTTP::Server::Context -> _)"},"return_type":"","visibility":"Public","body":"on(path, [\"options\"], &proc)"}},{"id":"patch(path,&proc:HTTP::Server::Context->_)-instance-method","html_id":"patch(path,&amp;proc:HTTP::Server::Context-&gt;_)-instance-method","name":"patch","doc":"Draw a route for *path* with `PATCH` method.\n\n```\nrouter = Onyx::REST::Router.new do\n  patch \"/bar\" do\n    \"Hello from PATCH /bar!\"\n  end\nend\n```","summary":"<p>Draw a route for <em>path</em> with <code>PATCH</code> method.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path, &proc : HTTP::Server::Context -> _)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L141","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L141","def":{"name":"patch","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"(HTTP::Server::Context -> _)"},"return_type":"","visibility":"Public","body":"on(path, [\"patch\"], &proc)"}},{"id":"post(path,&proc:HTTP::Server::Context->_)-instance-method","html_id":"post(path,&amp;proc:HTTP::Server::Context-&gt;_)-instance-method","name":"post","doc":"Draw a route for *path* with `POST` method.\n\n```\nrouter = Onyx::REST::Router.new do\n  post \"/bar\" do\n    \"Hello from POST /bar!\"\n  end\nend\n```","summary":"<p>Draw a route for <em>path</em> with <code>POST</code> method.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path, &proc : HTTP::Server::Context -> _)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L141","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L141","def":{"name":"post","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"(HTTP::Server::Context -> _)"},"return_type":"","visibility":"Public","body":"on(path, [\"post\"], &proc)"}},{"id":"put(path,&proc:HTTP::Server::Context->_)-instance-method","html_id":"put(path,&amp;proc:HTTP::Server::Context-&gt;_)-instance-method","name":"put","doc":"Draw a route for *path* with `PUT` method.\n\n```\nrouter = Onyx::REST::Router.new do\n  put \"/bar\" do\n    \"Hello from PUT /bar!\"\n  end\nend\n```","summary":"<p>Draw a route for <em>path</em> with <code>PUT</code> method.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path, &proc : HTTP::Server::Context -> _)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L141","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L141","def":{"name":"put","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"(HTTP::Server::Context -> _)"},"return_type":"","visibility":"Public","body":"on(path, [\"put\"], &proc)"}},{"id":"ws(path,&proc:HTTP::WebSocket,HTTP::Server::Context->_)-instance-method","html_id":"ws(path,&amp;proc:HTTP::WebSocket,HTTP::Server::Context-&gt;_)-instance-method","name":"ws","doc":"Draw a WebSocket route for *path*.\n\nA request is currently determined as websocket by `\"Upgrade\": \"Websocket\"` header.\n\n```\nrouter = Onyx::REST::Router.new do\n  ws \"/foo/:bar\" do |socket, env|\n    socket.send(\"Hello WS!\")\n  end\nend\n```","summary":"<p>Draw a WebSocket route for <em>path</em>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path, &proc : HTTP::WebSocket, HTTP::Server::Context -> _)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L167","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L167","def":{"name":"ws","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"(HTTP::WebSocket, HTTP::Server::Context -> _)"},"return_type":"","visibility":"Public","body":"add(\"/ws\" + path, HTTP::WebSocketHandler.new(&proc))"}}],"macros":[],"types":[{"html_id":"github.com/onyxframework/rest/Onyx/REST/Router/DuplicateRouteError","path":"Onyx/REST/Router/DuplicateRouteError.html","kind":"class","full_name":"Onyx::REST::Router::DuplicateRouteError","name":"DuplicateRouteError","abstract":false,"superclass":{"html_id":"github.com/onyxframework/rest/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/onyxframework/rest/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/rest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-rest/router.cr","line_number":172,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/rest/Onyx/REST/Router","kind":"class","full_name":"Onyx::REST::Router","name":"Router"},"doc":"Raised if a duplicate route is found.","summary":"<p>Raised if a duplicate route is found.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"route:String-instance-method","html_id":"route:String-instance-method","name":"route","doc":"The route which caused the error.","summary":"<p>The route which caused the error.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L174","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/router.cr#L174","def":{"name":"route","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@route"}}],"macros":[],"types":[]}]},{"html_id":"github.com/onyxframework/rest/Onyx/REST/Server","path":"Onyx/REST/Server.html","kind":"class","full_name":"Onyx::REST::Server","name":"Server","abstract":false,"superclass":{"html_id":"github.com/onyxframework/rest/HTTP/Server","kind":"class","full_name":"HTTP::Server","name":"Server"},"ancestors":[{"html_id":"github.com/onyxframework/rest/HTTP/Server","kind":"class","full_name":"HTTP::Server","name":"Server"},{"html_id":"github.com/onyxframework/rest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/rest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-rest/server.cr","line_number":15,"url":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/server.cr"}],"repository_name":"github.com/onyxframework/rest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/rest/Onyx/REST","kind":"class","full_name":"Onyx::REST","name":"REST"},"doc":"The Onyx REST server. Basically it is just a wrapper around default `HTTP::Server`,\nwhich logs server start and stop events.\n\n```\nserver = Onyx::REST::Server.new(handlers)\nserver.bind_tcp(\"0.0.0.0\", 5000)\nserver.listen\n\n#   INFO -- : ⬛ Onyx::REST::Server is listening at http://0.0.0.0:5000\n^C\n#   INFO -- : ⬛ Onyx::REST::Server is shutting down!\n```","summary":"<p>The Onyx REST server.</p>","class_methods":[],"constructors":[{"id":"new(handlers:Array,*,name:String=&quot;Onyx::REST::Server&quot;,logger:Logger?=Logger.new(STDOUT),logger_severity:Logger::Severity=Logger::INFO)-class-method","html_id":"new(handlers:Array,*,name:String=&amp;quot;Onyx::REST::Server&amp;quot;,logger:Logger?=Logger.new(STDOUT),logger_severity:Logger::Severity=Logger::INFO)-class-method","name":"new","doc":"Initialize with an array of *handlers*.","summary":"<p>Initialize with an array of <em>handlers</em>.</p>","abstract":false,"args":[{"name":"handlers","doc":null,"default_value":"","external_name":"handlers","restriction":"Array"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"name","doc":null,"default_value":"\"Onyx::REST::Server\"","external_name":"name","restriction":"String"},{"name":"logger","doc":null,"default_value":"Logger.new(STDOUT)","external_name":"logger","restriction":"Logger | ::Nil"},{"name":"logger_severity","doc":null,"default_value":"Logger::INFO","external_name":"logger_severity","restriction":"Logger::Severity"}],"args_string":"(handlers : Array, *, name : String = <span class=\"s\">&quot;Onyx::REST::Server&quot;</span>, logger : Logger? = <span class=\"t\">Logger</span>.<span class=\"k\">new</span>(<span class=\"t\">STDOUT</span>), logger_severity : Logger::Severity = <span class=\"t\">Logger</span><span class=\"t\">::</span><span class=\"t\">INFO</span>)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/server.cr#L17","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/server.cr#L17","def":{"name":"new","args":[{"name":"handlers","doc":null,"default_value":"","external_name":"handlers","restriction":"Array"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"name","doc":null,"default_value":"\"Onyx::REST::Server\"","external_name":"name","restriction":"String"},{"name":"logger","doc":null,"default_value":"Logger.new(STDOUT)","external_name":"logger","restriction":"Logger | ::Nil"},{"name":"logger_severity","doc":null,"default_value":"Logger::INFO","external_name":"logger_severity","restriction":"Logger::Severity"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(handlers, name: name, logger: logger, logger_severity: logger_severity)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(handler:HTTP::Handler,*args,**nargs)-class-method","html_id":"new(handler:HTTP::Handler,*args,**nargs)-class-method","name":"new","doc":"Initialize with a single *handler*.","summary":"<p>Initialize with a single <em>handler</em>.</p>","abstract":false,"args":[{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"HTTP::Handler"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(handler : HTTP::Handler, *args, **nargs)","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/server.cr#L28","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/server.cr#L28","def":{"name":"new","args":[{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"HTTP::Handler"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"nargs","doc":null,"default_value":"","external_name":"nargs","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new([handler], *args, **nargs)"}}],"instance_methods":[{"id":"listen-instance-method","html_id":"listen-instance-method","name":"listen","doc":"Start listening for requests. Blocks the runtime, just like the vanilla `HTTP::Server`.","summary":"<p>Start listening for requests.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/server.cr#L33","source_link":"https://github.com/onyxframework/rest/blob/3f99aa94b52108dd2574e101266b6192c84d0c5c/src/onyx-rest/server.cr#L33","def":{"name":"listen","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if logger = @logger\n  io = IO::Memory.new\n  ((io << ((\"⬛\".colorize(:green)).mode(:bold))) << \" \") << @name\n  io << (\" is listening at \".colorize(:light_gray))\n  io << (@sockets.join(\", \") do |s|\n    format_address(s)\n  end)\n  logger.log(@logger_severity, io.to_s)\nend\nSignal::INT.trap do\n  if logger = @logger\n    puts(\"\\n\")\n    io = IO::Memory.new\n    ((io << ((\"⬛\".colorize(:red)).mode(:bold))) << \" \") << @name\n    io << (\" is shutting down!\".colorize(:light_gray))\n    logger.not_nil!.log(@logger_severity, io.to_s)\n  end\n  exit\nend\nsuper()\n"}}],"macros":[],"types":[]}]}]}]}}